# A user-defined function, just like any other function, is called when we mention its name.
def square (Int -> Int) = dup *

# 16
4 square

# first class functions

[1, 2, 3] { (10 *) } map
# [10, 20, 30]

[1, 2, 3] { square } map
# [1, 4, 9]

[1, 2, 3] \square map
# [1, 4, 9]


# Multiple constructors with no fields
type Bool {
    | false
    | true
}

# Multiple constructors with different numbers of fields
type o Option {
    | none
    | some o
}

# An empty Option of type o Option
none

# A full Option of type Int Option
5 some


def map (o Option, (o -> t) -> t Option) =
    @f
    match {
        | none -> none
        | some -> f some
    }


none { 1 + } map
# none

1 some { 1 + } map
# 2 some


type a b Pair { a: a, b: b }

def pair = { a, b }

# A pair of type Float Char Pair
2.0 'x' Pair
{ 2.0, 'x' }




type Vec2 {
    x: Float,
    y: Float,
}

type Vec2 {
    | vec2 {
        x: Float
        y: Float
    }
}
def inc (Vec2 -> Vec2) = dup .x 1 + :x



// saturation
v !{ 2 :x 3 :y }